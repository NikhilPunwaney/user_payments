{"ast":null,"code":"import _classCallCheck from \"/Users/nikhilpunwaney/Desktop/deepbench_recruitment/InterviewQuestions/stripe-challenge/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nikhilpunwaney/Desktop/deepbench_recruitment/InterviewQuestions/stripe-challenge/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/nikhilpunwaney/Desktop/deepbench_recruitment/InterviewQuestions/stripe-challenge/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/nikhilpunwaney/Desktop/deepbench_recruitment/InterviewQuestions/stripe-challenge/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/nikhilpunwaney/Desktop/deepbench_recruitment/InterviewQuestions/stripe-challenge/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/nikhilpunwaney/Desktop/deepbench_recruitment/InterviewQuestions/stripe-challenge/client/src/FormColumn.js\";\nimport './FormColumn.css';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nvar FormColumn =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FormColumn, _Component);\n\n  function FormColumn() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FormColumn);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FormColumn)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.checkIfValid = function () {\n      var payment = _this.props.payment;\n      var client = _this.props.client;\n      return payment.status === 'Overdue' && moment(client.expiry).isAfter(moment());\n    };\n\n    return _this;\n  }\n\n  _createClass(FormColumn, [{\n    key: \"render\",\n    value: function render() {\n      var client = this.props.client;\n      var payment = this.props.payment;\n      var name = \"\".concat(client.firstName, \" \").concat(client.lastName);\n      return React.createElement(\"form\", {\n        className: \"Form-col\",\n        onSubmit: this.props.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, \"New payment request\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, name), React.createElement(\"input\", {\n        name: \"amount\",\n        placeholder: \"Amount\",\n        type: \"text\",\n        value: payment.amount,\n        onChange: this.props.updatePayment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }), React.createElement(\"select\", {\n        name: \"currency\",\n        value: payment.currency,\n        onChange: this.props.updatePayment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"euro\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Euro\"), React.createElement(\"option\", {\n        value: \"rupee\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"Rupee\"), React.createElement(\"option\", {\n        value: \"usd\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"USD\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        name: \"source\",\n        placeholder: \"Source\",\n        type: \"text\",\n        value: client.source,\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        name: \"expiry\",\n        placeholder: \"Source\",\n        type: \"text\",\n        value: moment(client.expiry).format('MMM DDD YYYY'),\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        disabled: !this.checkIfValid(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Submit\"), payment.status === 'Paid' && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"This has already been paid\"), payment.status === 'Requested' && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"This has already been requested\"), moment(client.expiry).isBefore(moment()) && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Card is expired\"));\n    }\n  }]);\n\n  return FormColumn;\n}(Component);\n\nFormColumn.propTypes = {\n  client: PropTypes.object.isRequired,\n  payment: PropTypes.object.isRequired,\n  updatePayment: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired\n};\nexport default FormColumn;","map":{"version":3,"sources":["/Users/nikhilpunwaney/Desktop/deepbench_recruitment/InterviewQuestions/stripe-challenge/client/src/FormColumn.js"],"names":["React","Component","PropTypes","moment","FormColumn","checkIfValid","payment","props","client","status","expiry","isAfter","name","firstName","lastName","handleSubmit","amount","updatePayment","currency","source","format","isBefore","propTypes","object","isRequired","func"],"mappings":";;;;;;AAAA,OAAO,kBAAP;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;IAEMC,U;;;;;;;;;;;;;;;;;;UACJC,Y,GAAe,YAAM;AACnB,UAAMC,OAAO,GAAG,MAAKC,KAAL,CAAWD,OAA3B;AACA,UAAME,MAAM,GAAG,MAAKD,KAAL,CAAWC,MAA1B;AACA,aAAOF,OAAO,CAACG,MAAR,KAAmB,SAAnB,IACJN,MAAM,CAACK,MAAM,CAACE,MAAR,CAAN,CAAsBC,OAAtB,CAA8BR,MAAM,EAApC,CADH;AAED,K;;;;;;;6BACQ;AACP,UAAMK,MAAM,GAAG,KAAKD,KAAL,CAAWC,MAA1B;AACA,UAAMF,OAAO,GAAG,KAAKC,KAAL,CAAWD,OAA3B;AACA,UAAMM,IAAI,aAAMJ,MAAM,CAACK,SAAb,cAA0BL,MAAM,CAACM,QAAjC,CAAV;AACA,aACE;AAAM,QAAA,SAAS,EAAC,UAAhB;AAA2B,QAAA,QAAQ,EAAE,KAAKP,KAAL,CAAWQ,YAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIH,IAAJ,CAFF,EAGE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,WAAW,EAAC,QAFd;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,KAAK,EAAEN,OAAO,CAACU,MAJjB;AAKE,QAAA,QAAQ,EAAE,KAAKT,KAAL,CAAWU,aALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVF,EAWE;AAAQ,QAAA,IAAI,EAAC,UAAb;AAAwB,QAAA,KAAK,EAAEX,OAAO,CAACY,QAAvC;AAAiD,QAAA,QAAQ,EAAE,KAAKX,KAAL,CAAWU,aAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAQ,QAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,EAGE;AAAQ,QAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,CAXF,EAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhBF,EAiBE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,WAAW,EAAC,QAFd;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,KAAK,EAAET,MAAM,CAACW,MAJhB;AAKE,QAAA,QAAQ,MALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAjBF,EAwBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAxBF,EAyBE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,WAAW,EAAC,QAFd;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,KAAK,EAAEhB,MAAM,CAACK,MAAM,CAACE,MAAR,CAAN,CAAsBU,MAAtB,CAA6B,cAA7B,CAJT;AAKE,QAAA,QAAQ,MALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAzBF,EAgCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhCF,EAiCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAjCF,EAkCE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,QAAQ,EAAE,CAAC,KAAKf,YAAL,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAlCF,EAmCGC,OAAO,CAACG,MAAR,KAAmB,MAAnB,IAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAnChC,EAoCGH,OAAO,CAACG,MAAR,KAAmB,WAAnB,IAAkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CApCrC,EAqCGN,MAAM,CAACK,MAAM,CAACE,MAAR,CAAN,CAAsBW,QAAtB,CAA+BlB,MAAM,EAArC,KAA4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BArC/C,CADF;AAyCD;;;;EApDsBF,S;;AAuDzBG,UAAU,CAACkB,SAAX,GAAuB;AACrBd,EAAAA,MAAM,EAAEN,SAAS,CAACqB,MAAV,CAAiBC,UADJ;AAErBlB,EAAAA,OAAO,EAAEJ,SAAS,CAACqB,MAAV,CAAiBC,UAFL;AAGrBP,EAAAA,aAAa,EAAEf,SAAS,CAACuB,IAAV,CAAeD,UAHT;AAIrBT,EAAAA,YAAY,EAAEb,SAAS,CAACuB,IAAV,CAAeD;AAJR,CAAvB;AAOA,eAAepB,UAAf","sourcesContent":["import './FormColumn.css';\n\nimport React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nclass FormColumn extends Component {\n  checkIfValid = () => {\n    const payment = this.props.payment;\n    const client = this.props.client;\n    return payment.status === 'Overdue'\n    && moment(client.expiry).isAfter(moment());\n  }\n  render() {\n    const client = this.props.client;\n    const payment = this.props.payment;\n    const name = `${client.firstName} ${client.lastName}`\n    return (\n      <form className=\"Form-col\" onSubmit={this.props.handleSubmit}>\n        <h2>New payment request</h2>\n        <p>{name}</p>\n        <input\n          name=\"amount\"\n          placeholder=\"Amount\"\n          type=\"text\"\n          value={payment.amount}\n          onChange={this.props.updatePayment}\n        />\n        <br />\n        <select name=\"currency\" value={payment.currency} onChange={this.props.updatePayment}>\n          <option value=\"euro\">Euro</option>\n          <option value=\"rupee\">Rupee</option>\n          <option value=\"usd\">USD</option>\n        </select>\n        <br />\n        <input\n          name=\"source\"\n          placeholder=\"Source\"\n          type=\"text\"\n          value={client.source}\n          disabled\n        />\n        <br />\n        <input\n          name=\"expiry\"\n          placeholder=\"Source\"\n          type=\"text\"\n          value={moment(client.expiry).format('MMM DDD YYYY')}\n          disabled\n        />\n        <br />\n        <br />\n        <button type=\"submit\" disabled={!this.checkIfValid()}>Submit</button>\n        {payment.status === 'Paid' && <div>This has already been paid</div>}\n        {payment.status === 'Requested' && <div>This has already been requested</div>}\n        {moment(client.expiry).isBefore(moment()) && <div>Card is expired</div>}\n      </form>\n    );\n  }\n}\n\nFormColumn.propTypes = {\n  client: PropTypes.object.isRequired,\n  payment: PropTypes.object.isRequired,\n  updatePayment: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired\n};\n\nexport default FormColumn;\n"]},"metadata":{},"sourceType":"module"}