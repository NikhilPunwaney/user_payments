{"ast":null,"code":"import _regeneratorRuntime from \"/Users/nikhilpunwaney/Desktop/deepbench_recruitment/InterviewQuestions/stripe-challenge/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/nikhilpunwaney/Desktop/deepbench_recruitment/InterviewQuestions/stripe-challenge/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/nikhilpunwaney/Desktop/deepbench_recruitment/InterviewQuestions/stripe-challenge/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nikhilpunwaney/Desktop/deepbench_recruitment/InterviewQuestions/stripe-challenge/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/nikhilpunwaney/Desktop/deepbench_recruitment/InterviewQuestions/stripe-challenge/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/nikhilpunwaney/Desktop/deepbench_recruitment/InterviewQuestions/stripe-challenge/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/nikhilpunwaney/Desktop/deepbench_recruitment/InterviewQuestions/stripe-challenge/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/nikhilpunwaney/Desktop/deepbench_recruitment/InterviewQuestions/stripe-challenge/client/src/FormColumn.js\";\nimport './FormColumn.css';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nvar FormColumn =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FormColumn, _Component);\n\n  function FormColumn() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FormColumn);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FormColumn)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      currency: 'usd'\n    };\n\n    _this.handleSubmit =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var response, body;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                _context.next = 3;\n                return fetch('/api/world', {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify({\n                    post: _this.state.post\n                  })\n                });\n\n              case 3:\n                response = _context.sent;\n                _context.next = 6;\n                return response.text();\n\n              case 6:\n                body = _context.sent;\n\n                _this.setState({\n                  responseToPost: body\n                });\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(FormColumn, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var client = this.props.client;\n      return React.createElement(\"form\", {\n        className: \"Form-col\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"New Payment\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, client.firstName, \" \", client.lastName), React.createElement(\"input\", {\n        placeholder: \"Amount\",\n        type: \"text\",\n        value: this.state.amount,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            amount: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), React.createElement(\"select\", {\n        value: this.state.currency,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            currency: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"euro\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Euro\"), React.createElement(\"option\", {\n        value: \"rupee\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Rupee\"), React.createElement(\"option\", {\n        value: \"usd\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"USD\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        placeholder: \"Source\",\n        type: \"text\",\n        value: this.state.source,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            source: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Submit\"));\n    }\n  }]);\n\n  return FormColumn;\n}(Component);\n\nFormColumn.propTypes = {\n  client: PropTypes.object.isRequired\n};\nexport default FormColumn;","map":{"version":3,"sources":["/Users/nikhilpunwaney/Desktop/deepbench_recruitment/InterviewQuestions/stripe-challenge/client/src/FormColumn.js"],"names":["React","Component","PropTypes","FormColumn","state","currency","handleSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","post","response","text","setState","responseToPost","client","props","firstName","lastName","amount","target","value","source","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import './FormColumn.css';\n\nimport React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nclass FormColumn extends Component {\n  state = {\n    currency: 'usd',\n  };\n  handleSubmit = async e => {\n    e.preventDefault();\n    const response = await fetch('/api/world', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ post: this.state.post }),\n    });\n    const body = await response.text();\n    this.setState({ responseToPost: body });\n  };\n  render() {\n    const client = this.props.client;\n    return (\n      <form className=\"Form-col\" onSubmit={this.handleSubmit}>\n        <h2>New Payment</h2>\n        <p>{client.firstName} {client.lastName}</p>\n        <input\n          placeholder=\"Amount\"\n          type=\"text\"\n          value={this.state.amount}\n          onChange={e => this.setState({ amount: e.target.value })}\n        />\n        <br />\n        <select value={this.state.currency} onChange={e => this.setState({ currency: e.target.value })}>\n          <option value=\"euro\">Euro</option>\n          <option value=\"rupee\">Rupee</option>\n          <option value=\"usd\">USD</option>\n        </select>\n        <br />\n        <input\n          placeholder=\"Source\"\n          type=\"text\"\n          value={this.state.source}\n          onChange={e => this.setState({ source: e.target.value })}\n        />\n        <br />\n        <br />\n        <button type=\"submit\">Submit</button>\n      </form>\n    );\n  }\n}\n\nFormColumn.propTypes = {\n  client: PropTypes.object.isRequired\n};\n\nexport default FormColumn;\n"]},"metadata":{},"sourceType":"module"}