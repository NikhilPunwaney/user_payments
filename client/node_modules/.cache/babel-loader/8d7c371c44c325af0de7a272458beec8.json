{"ast":null,"code":"import _regeneratorRuntime from \"/Users/nikhilpunwaney/Desktop/deepbench_recruitment/InterviewQuestions/stripe-challenge/client/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/Users/nikhilpunwaney/Desktop/deepbench_recruitment/InterviewQuestions/stripe-challenge/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"/Users/nikhilpunwaney/Desktop/deepbench_recruitment/InterviewQuestions/stripe-challenge/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/nikhilpunwaney/Desktop/deepbench_recruitment/InterviewQuestions/stripe-challenge/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nikhilpunwaney/Desktop/deepbench_recruitment/InterviewQuestions/stripe-challenge/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/nikhilpunwaney/Desktop/deepbench_recruitment/InterviewQuestions/stripe-challenge/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/nikhilpunwaney/Desktop/deepbench_recruitment/InterviewQuestions/stripe-challenge/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/nikhilpunwaney/Desktop/deepbench_recruitment/InterviewQuestions/stripe-challenge/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/nikhilpunwaney/Desktop/deepbench_recruitment/InterviewQuestions/stripe-challenge/client/src/FormColumn.js\";\nimport './FormColumn.css';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nvar FormColumn =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FormColumn, _Component);\n\n  function FormColumn() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FormColumn);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FormColumn)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      currency: 'usd'\n    };\n\n    _this.onChange = function (event) {\n      var state = _this.state;\n      state[event.target.name] = event.target.value;\n\n      _this.setState(state);\n    };\n\n    _this.checkIfValid = function () {\n      var state = _this.state;\n      return state.amount && state.amount.length > 0 && state.currency && state.currency.length > 0 && state.source && state.source.length > 0;\n    };\n\n    _this.handleSubmit =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var updatedClient, response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                updatedClient = _objectSpread({}, _this.props.client, {\n                  paymentStatus: 'Requested'\n                });\n                _context.next = 4;\n                return fetch('/api/clients/update', {\n                  method: 'PUT',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify(updatedClient)\n                }).json();\n\n              case 4:\n                response = _context.sent;\n\n                if (!(response.status !== 200)) {\n                  _context.next = 7;\n                  break;\n                }\n\n                throw Error(response.message);\n\n              case 7:\n                _this.updateClient(updatedClient);\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(FormColumn, [{\n    key: \"render\",\n    value: function render() {\n      var client = this.props.client;\n      return React.createElement(\"form\", {\n        className: \"Form-col\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"New Payment\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, client.firstName, \" \", client.lastName), React.createElement(\"input\", {\n        name: \"amount\",\n        placeholder: \"Amount\",\n        type: \"text\",\n        value: this.state.amount,\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(\"select\", {\n        name: \"currency\",\n        value: this.state.currency,\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"euro\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Euro\"), React.createElement(\"option\", {\n        value: \"rupee\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Rupee\"), React.createElement(\"option\", {\n        value: \"usd\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"USD\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        name: \"source\",\n        placeholder: \"Source\",\n        type: \"text\",\n        value: this.state.source,\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        disabled: !this.checkIfValid(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Submit\"));\n    }\n  }]);\n\n  return FormColumn;\n}(Component);\n\nFormColumn.propTypes = {\n  client: PropTypes.object.isRequired,\n  updateClient: PropTypes.func.isRequired\n};\nexport default FormColumn;","map":{"version":3,"sources":["/Users/nikhilpunwaney/Desktop/deepbench_recruitment/InterviewQuestions/stripe-challenge/client/src/FormColumn.js"],"names":["React","Component","PropTypes","FormColumn","state","currency","onChange","event","target","name","value","setState","checkIfValid","amount","length","source","handleSubmit","e","preventDefault","updatedClient","props","client","paymentStatus","fetch","method","headers","body","JSON","stringify","json","response","status","Error","message","updateClient","firstName","lastName","propTypes","object","isRequired","func"],"mappings":"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","sourcesContent":["import './FormColumn.css';\n\nimport React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nclass FormColumn extends Component {\n  state = {\n    currency: 'usd',\n  };\n  onChange = event => {\n    const state = this.state;\n    state[event.target.name] = event.target.value;\n    this.setState(state);\n  }\n  checkIfValid = () => {\n    const state = this.state;\n    return state.amount && state.amount.length > 0\n    && state.currency && state.currency.length > 0\n    && state.source && state.source.length > 0\n  }\n  handleSubmit = async e => {\n    e.preventDefault();\n    const updatedClient = { ...this.props.client, paymentStatus: 'Requested' };\n    const response = await fetch('/api/clients/update', {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(updatedClient),\n    }).json();\n    if (response.status !== 200) throw Error(response.message);\n    this.updateClient(updatedClient);\n  };\n  render() {\n    const client = this.props.client;\n    return (\n      <form className=\"Form-col\" onSubmit={this.handleSubmit}>\n        <h2>New Payment</h2>\n        <p>{client.firstName} {client.lastName}</p>\n        <input\n          name=\"amount\"\n          placeholder=\"Amount\"\n          type=\"text\"\n          value={this.state.amount}\n          onChange={this.onChange}\n        />\n        <br />\n        <select name=\"currency\" value={this.state.currency} onChange={this.onChange}>\n          <option value=\"euro\">Euro</option>\n          <option value=\"rupee\">Rupee</option>\n          <option value=\"usd\">USD</option>\n        </select>\n        <br />\n        <input\n          name=\"source\"\n          placeholder=\"Source\"\n          type=\"text\"\n          value={this.state.source}\n          onChange={this.onChange}\n        />\n        <br />\n        <br />\n        <button type=\"submit\" disabled={!this.checkIfValid()}>Submit</button>\n      </form>\n    );\n  }\n}\n\nFormColumn.propTypes = {\n  client: PropTypes.object.isRequired,\n  updateClient: PropTypes.func.isRequired\n};\n\nexport default FormColumn;\n"]},"metadata":{},"sourceType":"module"}