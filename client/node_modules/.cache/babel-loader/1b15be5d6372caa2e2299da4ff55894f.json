{"ast":null,"code":"import _regeneratorRuntime from \"/Users/nikhilpunwaney/Desktop/deepbench_recruitment/InterviewQuestions/stripe-challenge/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/nikhilpunwaney/Desktop/deepbench_recruitment/InterviewQuestions/stripe-challenge/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/nikhilpunwaney/Desktop/deepbench_recruitment/InterviewQuestions/stripe-challenge/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nikhilpunwaney/Desktop/deepbench_recruitment/InterviewQuestions/stripe-challenge/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/nikhilpunwaney/Desktop/deepbench_recruitment/InterviewQuestions/stripe-challenge/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/nikhilpunwaney/Desktop/deepbench_recruitment/InterviewQuestions/stripe-challenge/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/nikhilpunwaney/Desktop/deepbench_recruitment/InterviewQuestions/stripe-challenge/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/nikhilpunwaney/Desktop/deepbench_recruitment/InterviewQuestions/stripe-challenge/client/src/App.js\";\nimport './App.css';\nimport React, { Component } from 'react';\nimport ClientColumn from './ClientColumn';\nimport FormColumn from './FormColumn';\nimport PaymentColumn from './PaymentColumn';\nimport ResponseColumn from './ResponseColumn';\nimport logo from \"./logo.svg\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      clients: [],\n      payments: []\n    };\n    _this.getClients =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var response, clients;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"/api/clients\");\n\n            case 2:\n              response = _context.sent;\n\n              if (!(response.status !== 200)) {\n                _context.next = 5;\n                break;\n              }\n\n              throw Error(response.message);\n\n            case 5:\n              _context.next = 7;\n              return response.json();\n\n            case 7:\n              clients = _context.sent;\n\n              _this.setState({\n                clients: clients\n              });\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    _this.selectClient = function (selectedClient) {\n      return function () {\n        _this.setState({\n          selectedClient: selectedClient\n        });\n\n        _this.getPayments(selectedClient.id, _this.props.status);\n      };\n    };\n\n    _this.getPayments =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(userId, status) {\n        var response, payments;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return fetch(\"/api/payments/\".concat(userId).concat(status ? \"?status=\".concat(status) : ''));\n\n              case 2:\n                response = _context2.sent;\n\n                if (!(response.status !== 200)) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                throw Error(response.message);\n\n              case 5:\n                _context2.next = 7;\n                return response.json();\n\n              case 7:\n                payments = _context2.sent;\n\n                _this.setState({\n                  payments: payments\n                });\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x, _x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.filterPayments = function (status) {\n      _this.setState({\n        status: status\n      });\n\n      var selectedClient = _this.state.selectedClient;\n\n      _this.getPayments(selectedClient.id, status);\n    };\n\n    _this.selectPayment = function (selectedPayment) {\n      return function () {\n        _this.setState({\n          selectedPayment: selectedPayment\n        });\n      };\n    };\n\n    _this.updatePayment = function (event) {\n      var selectedPayment = _this.state.selectedPayment;\n      selectedPayment[event.target.name] = event.target.value;\n\n      _this.setState({\n        selectedPayment: selectedPayment\n      });\n    };\n\n    _this.handleSubmit =\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(e) {\n        var selectedPayment, response, updatedPayment, payments, selectedClient;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                e.preventDefault();\n                selectedPayment = _this.state.selectedPayment;\n                _context3.next = 4;\n                return fetch(\"/api/payments/\".concat(selectedPayment.id), {\n                  method: 'PUT',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify(selectedPayment)\n                });\n\n              case 4:\n                response = _context3.sent;\n\n                if (!(response.status !== 200)) {\n                  _context3.next = 7;\n                  break;\n                }\n\n                throw Error(response.message);\n\n              case 7:\n                updatedPayment = response.json();\n                payments = _this.state.payments.filter(function (c) {\n                  return c.id !== updatedPayment.id;\n                });\n                payments.push(updatedPayment);\n                selectedClient = _this.state.selectedClient;\n\n                _this.setState({\n                  payments: payments,\n                  selectedPayment: updatedPayment,\n                  response: \"Payment for \".concat(updatedPayment.name, \" has been requested from \").concat(selectedClient.firstName, \" \").concat(selectedClient.lastName, \"!\")\n                });\n\n              case 12:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getClients();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var clients = this.state.clients;\n      var selectedClient = this.state.selectedClient;\n      var payments = this.state.payments;\n      var selectedPayment = this.state.selectedPayment;\n      var response = this.state.response;\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Summer 2019 Internship Technical Challenge\")), React.createElement(\"div\", {\n        className: \"App-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, clients.length > 0 && React.createElement(ClientColumn, {\n        clients: clients,\n        selectedClient: selectedClient,\n        selectClient: this.selectClient,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), selectedClient && React.createElement(PaymentColumn, {\n        payments: payments,\n        selectedPayment: selectedPayment,\n        selectPayment: this.selectPayment,\n        filterPayments: this.filterPayments,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), selectedPayment && React.createElement(FormColumn, {\n        client: selectedClient,\n        payment: selectedPayment,\n        updatePayment: this.updatePayment,\n        handleSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), response && React.createElement(ResponseColumn, {\n        response: response,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/nikhilpunwaney/Desktop/deepbench_recruitment/InterviewQuestions/stripe-challenge/client/src/App.js"],"names":["React","Component","ClientColumn","FormColumn","PaymentColumn","ResponseColumn","App","state","clients","payments","getClients","fetch","response","status","Error","message","json","setState","selectClient","selectedClient","getPayments","id","props","userId","filterPayments","selectPayment","selectedPayment","updatePayment","event","target","name","value","handleSubmit","e","preventDefault","method","headers","body","JSON","stringify","updatedPayment","filter","c","push","firstName","lastName","logo","length"],"mappings":"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","sourcesContent":["import './App.css';\n\nimport React, { Component } from 'react';\n\nimport ClientColumn from './ClientColumn';\nimport FormColumn from './FormColumn';\nimport PaymentColumn from './PaymentColumn';\nimport ResponseColumn from './ResponseColumn';\nimport logo from './logo.svg';\n\nclass App extends Component {\n  state = {\n    clients: [],\n    payments: []\n  };\n  componentDidMount() {\n    this.getClients();\n  }\n  getClients = async () => {\n    const response = await fetch(`/api/clients`);\n    if (response.status !== 200) throw Error(response.message);\n    const clients = await response.json();\n    this.setState({ clients });\n  }\n  selectClient = selectedClient => () => {\n    this.setState({ selectedClient });\n    this.getPayments(selectedClient.id, this.props.status);\n  }\n  getPayments = async (userId, status) => {\n    const response = await fetch(`/api/payments/${userId}${status ? `?status=${status}` : ''}`);\n    if (response.status !== 200) throw Error(response.message);\n    const payments = await response.json();\n    this.setState({ payments });\n  }\n  filterPayments = status => {\n    this.setState({ status });\n    const selectedClient = this.state.selectedClient;\n    this.getPayments(selectedClient.id, status);\n  }\n  selectPayment = selectedPayment => () => {\n    this.setState({ selectedPayment });\n  }\n  updatePayment = event => {\n    const selectedPayment = this.state.selectedPayment;\n    selectedPayment[event.target.name] = event.target.value;\n    this.setState({ selectedPayment });\n  }\n  handleSubmit = async e => {\n    e.preventDefault();\n    const selectedPayment = this.state.selectedPayment;\n    const response = await fetch(`/api/payments/${selectedPayment.id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(selectedPayment),\n    });\n    if (response.status !== 200) throw Error(response.message);\n    const updatedPayment = response.json();\n    const payments = this.state.payments.filter(c => c.id !== updatedPayment.id);\n    payments.push(updatedPayment);\n    const selectedClient = this.state.selectedClient;\n    this.setState({ payments, selectedPayment: updatedPayment, response: `Payment for ${updatedPayment.name} has been requested from ${selectedClient.firstName} ${selectedClient.lastName}!` });\n  }\n  render() {\n    const clients = this.state.clients;\n    const selectedClient = this.state.selectedClient;\n    const payments = this.state.payments;\n    const selectedPayment = this.state.selectedPayment;\n    const response = this.state.response;\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Summer 2019 Internship Technical Challenge\n          </p>\n        </header>\n        <div className=\"App-body\">\n          {clients.length > 0 && (\n            <ClientColumn\n              clients={clients}\n              selectedClient={selectedClient}\n              selectClient={this.selectClient}\n            />\n          )}\n          {selectedClient && (\n            <PaymentColumn\n              payments={payments}\n              selectedPayment={selectedPayment}\n              selectPayment={this.selectPayment}\n              filterPayments={this.filterPayments}\n            />\n          )}\n          {selectedPayment && (\n            <FormColumn\n              client={selectedClient}\n              payment={selectedPayment}\n              updatePayment={this.updatePayment}\n              handleSubmit={this.handleSubmit}\n            />\n          )}\n          {response && (\n            <ResponseColumn response={response} />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}